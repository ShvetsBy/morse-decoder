const MORSE_TABLE = {
    '.-':     'a',
    '-...':   'b',
    '-.-.':   'c',
    '-..':    'd',
    '.':      'e',
    '..-.':   'f',
    '--.':    'g',
    '....':   'h',
    '..':     'i',
    '.---':   'j',
    '-.-':    'k',
    '.-..':   'l',
    '--':     'm',
    '-.':     'n',
    '---':    'o',
    '.--.':   'p',
    '--.-':   'q',
    '.-.':    'r',
    '...':    's',
    '-':      't',
    '..-':    'u',
    '...-':   'v',
    '.--':    'w',
    '-..-':   'x',
    '-.--':   'y',
    '--..':   'z',
    '.----':  '1',
    '..---':  '2',
    '...--':  '3',
    '....-':  '4',
    '.....':  '5',
    '-....':  '6',
    '--...':  '7',
    '---..':  '8',
    '----.':  '9',
    '-----':  '0',
};

function decode(expr) {
    let arr = [],   
    letters = [],
    point = /10/g,
    dash = /11/g,
    zero = /0/g,
    space = /\*{10}/g;

for (i = 0; i < expr.length; i = i + 10) {
    letters.push(expr.slice(i, i+ 10));
}
const morseSymbols = letters.map((arg) => arg.replace (point, '.').replace(dash, '-').replace (zero, '').replace(space, ' ')); 
// каждый элемент массива, передается в функцию, как аргумент. К нему применяются действия по замене элементов.
// console.log(morseSymbols);
// [".-.", "---", ".-", "-..", " ", "-", "---", " ", ".--.", ".-.", "---", "--.", ".-.", ".-", "--", "--", "..", "-.", "--."]
morseSymbols.forEach((arg) => arr.push(MORSE_TABLE[arg] || ' '));
// console.log(arr.join(''));
return arr.join('');
}

module.exports = {
    decode
}

// const expr
// console.log(decode(expr));

// 0000101110
// 0000111111
// 0000001011
// 0000111010
// **********
// 0000000011
// 0000111111
// **********
// 0010111110
// 0000101110
// 0000111111
// 0000111110
// 0000101110
// 0000001011
// 0000001111
// 0000001111
// 0000001010
// 0000001110
// 0000111110




// '....':   'h'
// '.':      'e',
// '.-..':   'l',
// '.-..':   'l',
// '---':    'o',

// 0010101010
// 0000000010
// 0010111010
// 0010111010
// 0000111111

// 00101110
// 00101110
// 00101101